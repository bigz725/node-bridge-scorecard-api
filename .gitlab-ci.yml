#image: node:latest
image: docker:20
variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  REGISTRY: registry.local.zkissane.com
  IMAGE: zachistan/bridge_scorecard_api

  CURRENT_TAG: $REGISTRY/$IMAGE:$CI_COMMIT_REF_SLUG
  CACHE_TAG: $REGISTRY/$IMAGE:cache
  RELEASE_TAG: $REGISTRY/$IMAGE:latest

  BUILDKIT_INLINE_CACHE: "1"

services:
- name: docker:dind
  command: ["--tls=false"]

stages:
  - build
  - push
  - test
  - release
  - deploy


before_script:
  - docker info
  - docker context create builder-context
  - docker buildx create --name builderx --driver docker-container --use builder-context

build_amd64:
  tags:
    - x86
  stage: build
  script:
    - 'echo "Building image: $CURRENT_TAG"'
    # - docker buildx create --use
    - docker buildx build --build-arg tag="$CI_COMMIT_REF_SLUG" --cache-to=type=registry,ref="$CACHE_TAG" --cache-from "$CACHE_TAG" --tag "$CACHE_TAG" --push --platform=linux/amd64 .

build_arm64:
  tags:
    - arm
  stage: build
  script:
    - docker buildx build --build-arg tag="$CI_COMMIT_REF_SLUG" --cache-to=type=registry,ref="$CACHE_TAG" --cache-from "$CACHE_TAG" --tag "$CACHE_TAG" --push --platform=linux/arm64/v8 .

push:
  stage: push
  script:
    - docker buildx build --build-arg tag="$CI_COMMIT_REF_SLUG" --cache-from "$CACHE_TAG" --tag "$CURRENT_TAG" --push --platform=linux/arm64/v8,linux/amd64 .
    
test:
  stage: test
  script:
    - 'echo "Pulling $CURRENT_TAG to test using npm test"'
    - docker pull $CURRENT_TAG
    - docker run $CURRENT_TAG npm test    

deploy_staging:
  stage: deploy
  script:
    - 'echo "Deploying to staging"'
  when: manual

deploy_pi_kube_cluster:
  stage: deploy
  environment:
    name: Staging cluster
    url: http://bridge.zkissane.com

  before_script:
    - 'which ssh-agent || (apt-get update -y && apt-get install openssh-client -y)'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f ./dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no \n\n" > ~/.ssh/config'

  script:
    - ' echo "Deploying to the Super6c Pi Cluster"'
    - ssh-add <(echo "$DEPLOYER_ID_ECDSA")
    - ssh -o StrictHostKeyChecking=no deployer@"$CLUSTER_MAIN_NODE" 'cd infrastructure/bridge_scorecard_api; ./deploy.sh'
  when: manual  

# second-job:
#   stage: run
#   script:
#     - docker create $IMAGE -it --name $CONTAINER
#     - docker exec -it npm test
#     - docker stop $CONTAINER
